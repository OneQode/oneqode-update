---
ogImage: og-image.jpg
font: hack
---
{% include _header.liquid %}
		<style>
			section.hero {
				min-height: 90vh;
			}
			@media (min-width: 48em) {
				ul.ticks {
					max-width: 70%;
					display: grid;
					grid-template-columns: repeat(2, 1fr);
					grid-gap: 1.5rem 2rem;
				}
			}
			/* Location services */
			.location-services .box {
				height: auto;
				flex-grow: 1;
			}
			.location-services .col-xs-12 {
				display: flex;
				flex-direction: column;
				gap: 1rem;
			}
			/* Icons */
			.icon.lightning {
				mask: url(/img/ico/lightning.svg) no-repeat center;
				-webkit-mask: url(/img/ico/lightning.svg) no-repeat center;
			}
			.icon.cpu {
				mask: url(/img/ico/cpu2.svg) no-repeat center;
				-webkit-mask: url(/img/ico/cpu2.svg) no-repeat center;
			}
			.icon.network {
				mask: url(/img/ico/connection2.svg) no-repeat center;
				-webkit-mask: url(/img/ico/connection2.svg) no-repeat center;
			}
			/* Pulsing latency SVG */
			#network .svg-holder {
				position: relative;
				overflow: visible;
			}
			#network svg {
				position: absolute;
				width: 100%;
				transform: translateY(-50%);
				z-index: -1;
			}
			/* Test IP address */
			#test-ip {
				background: radial-gradient(ellipse closest-side at center, #1C1919, transparent);
			}
			.ping-command {
				font-size: 2rem;
			}
			.ping-command code {
				line-height: 2.5; /* fixes mobile issues if breaking to two lines */
			}
			.ping-command code::before {
				content: "$ ";
				color: #666;
			}
			.ping-command strong {
				padding: 1rem;
				border: 2px solid #999;
				border-radius: 10px;
			}
			.ping-command strong::after {
				content: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23999' viewBox='0 0 16 16'%3E%3Cpath d='M4 1.5H3a2 2 0 0 0-2 2V14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-1v1h1a1 1 0 0 1 1 1V14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V3.5a1 1 0 0 1 1-1h1v-1z'/%3E%3Cpath d='M9.5 1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5h3zm-3-1A1.5 1.5 0 0 0 5 1.5v1A1.5 1.5 0 0 0 6.5 4h3A1.5 1.5 0 0 0 11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3z'/%3E%3C/svg%3E");
				display: inline-block;
				width: 1.5rem;
				height: 1.5rem;
				margin-left: 1.5rem;
			}
			.ping-command strong:hover {
				border: 2px solid #fff;
				color: #fff;
				outline: none;
			}
			.ping-command strong:hover::after {
				content: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23fff' viewBox='0 0 16 16'%3E%3Cpath d='M4 1.5H3a2 2 0 0 0-2 2V14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-1v1h1a1 1 0 0 1 1 1V14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V3.5a1 1 0 0 1 1-1h1v-1z'/%3E%3Cpath d='M9.5 1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5h3zm-3-1A1.5 1.5 0 0 0 5 1.5v1A1.5 1.5 0 0 0 6.5 4h3A1.5 1.5 0 0 0 11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3z'/%3E%3C/svg%3E");
			}
			.ping-command strong.copied,
			.ping-command strong.copied:hover,
			.ping-command strong.copied:focus,
			.ping-command strong.copied:focus-within {
				border: 2px solid #00b0f0;
				color: #00b0f0;
				outline: none;
			}
			.ping-command strong.copied::after {
				content: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%2300b0f0' viewBox='0 0 16 16'%3E%3Cpath d='M6.5 0A1.5 1.5 0 0 0 5 1.5v1A1.5 1.5 0 0 0 6.5 4h3A1.5 1.5 0 0 0 11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3Zm3 1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5h3Z'/%3E%3Cpath d='M4 1.5H3a2 2 0 0 0-2 2V14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-1v1A2.5 2.5 0 0 1 9.5 5h-3A2.5 2.5 0 0 1 4 2.5v-1Zm6.854 7.354-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 0 1 .708-.708L7.5 10.793l2.646-2.647a.5.5 0 0 1 .708.708Z'/%3E%3C/svg%3E");
				display: inline-block;
				width: 1.5rem;
				height: 1.5rem;
				margin-left: 1.5rem;
			}
			/* Device styles */
			@media (max-width: 64em) {
				.location-bg .devices-only {
					margin-top: -8rem;
				}
			}
			/* Mobile-Specific Styles */
			@media (max-width: 48em) {
				ul.ticks li {
					margin-bottom: 1rem;
				}
				.icon {
					margin-bottom: 1rem;
				}
			}
		</style>
		<section class="hero">
			<div class="container">
				<div class="row middle-xs">
					<div class="col-xs-12 col-md-8 text-left mobile-text-center">
						<!-- Breadcrumb start -->
						<ol class="breadcrumb" vocab="https://schema.org/" typeof="BreadcrumbList">
							<li property="itemListElement" typeof="ListItem">
								<a property="item" typeof="WebPage" href="/locations/">
									<span property="name">Locations</span></a>
								<meta property="position" content="1">
							</li>
							<li property="itemListElement" typeof="ListItem">
								<span property="name">{{ breadcrumb }}</span>
								<meta property="position" content="2">
							</li>
						</ol>
						<!-- Breadcrumb end -->
						<h1>{{ pageTitle }}<mark class="dot">.</mark></h1>
						<p class="subheading">{{ pageSubtitle }}</p>
						<ul class="ticks mt-2">
							<li>High performance only</li>
							<li>Latency optimized</li>
							<li>API accessible</li>
							<li>DDoS protected</li>
						</ul>
						<p class="mb-0"><a href="/cloud/signup/" class="m-1 button">Get started</a> <span class="shine poppins ml-1">$20 free credit</span></p>
					</div>
				</div>
			</div>
		</section>
{{ content }}
		<script>
		document.addEventListener('DOMContentLoaded', function() {
			var testIp = document.querySelector('.ping-command strong');
			var originalTitle = testIp.title;

			testIp.addEventListener('click', function() {
				var textToCopy = this.textContent;

				navigator.clipboard.writeText(textToCopy).then(function() {
					// On success:
					testIp.classList.add('copied');
					testIp.title = 'Copied to clipboard';

					setTimeout(function() {
						testIp.classList.remove('copied');
						testIp.title = originalTitle;
					}, 1500);
				}, function(err) {
					// On error:
					console.error('Could not copy text: ', err);
				});
			});
		});
		</script>
{% include _footer.liquid %}